name: Build LookinLoader2 when upstream or local code changes

on:
  push:                     # 当仓库中有推送时触发
  workflow_dispatch:        # 手动触发
  schedule:                 # 每天自动检查上游更新
    - cron: "0 3 * * *"     # 每天 UTC 3 点 (北京时间 11:00)

env:
  UPSTREAM_REPO: https://github.com/QMUI/LookinServer.git
  UPSTREAM_BRANCH: main

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      upstream_changed: ${{ steps.set.outputs.up_changed }}
      sha:              ${{ steps.set.outputs.sha }}
      local_changed:    ${{ steps.filter.outputs.build }}
      should_build:     ${{ steps.set.outputs.should }}

    steps:
    - uses: actions/checkout@v4

    # ① 获取上游仓库最新 commit SHA
    - name: Fetch upstream SHA
      id: upstream
      run: |
        SHA=$(git ls-remote ${{ env.UPSTREAM_REPO }} refs/heads/${{ env.UPSTREAM_BRANCH }} | cut -f1)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    # ② 检查本地是否有变动
    - name: Filter local changes
      id: filter
      uses: dorny/paths-filter@v3
      with:
        list-files: shell
        filters: |
          build:
            - 'release_build.sh'
            - 'Tweak/**'
            - 'Makefile'
            - '.github/workflows/**'

    # ③ 判断是否需要构建
    - name: Decide build flags
      id: set
      run: |
        STORED=$(cat UPSTREAM_COMMIT 2>/dev/null || echo none)
        UP_CHANGED=false
        [[ "$STORED" != "${{ steps.upstream.outputs.sha }}" ]] && UP_CHANGED=true

        SHOULD=$([[ "$UP_CHANGED" == true || "${{ steps.filter.outputs.build }}" == 'true' ]] && echo true || echo false)

        echo "up_changed=$UP_CHANGED" >> $GITHUB_OUTPUT
        echo "sha=${{ steps.upstream.outputs.sha }}" >> $GITHUB_OUTPUT
        echo "should=$SHOULD" >> $GITHUB_OUTPUT

  build:
    needs: detect
    if: needs.detect.outputs.should_build == 'true'
    runs-on: macos-latest

    env:
      LS_CHANGED: ${{ needs.detect.outputs.upstream_changed }}

    steps:
    - uses: actions/checkout@v4

    # ① 如果上游有更新则克隆
    - name: Clone upstream @sha
      if: env.LS_CHANGED == 'true'
      run: |
        git clone --depth=1 ${{ env.UPSTREAM_REPO }} upstream
        cd upstream && git checkout ${{ needs.detect.outputs.sha }}

    # ② 执行 release_build.sh
    - name: Make script executable
      run: chmod +x ./release_build.sh

    - name: Run release build
      run: ./release_build.sh

    # ③ 上传构建产物（自动检测 build 目录）
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: LookinLoader2-build
        path: |
          build/
          output/
          Release/
          dist/
          packages/
          **/*.deb
          **/*.zip
          **/*.tar.gz
        if-no-files-found: ignore

    # ④ 如果上游更新了，则记录最新 SHA 并提交
    - name: Commit updated UPSTREAM_COMMIT
      if: env.LS_CHANGED == 'true'
      run: |
        echo "${{ needs.detect.outputs.sha }}" > UPSTREAM_COMMIT
        git config user.name  github-actions
        git config user.email github-actions@github.com
        git add UPSTREAM_COMMIT
        git commit -m "chore: update upstream LookinServer to ${{ needs.detect.outputs.sha }}"
        git push
